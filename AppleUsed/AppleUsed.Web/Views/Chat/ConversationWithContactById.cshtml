

@*<div class="chat-bolck">

    <div id="header"></div><br />

    <div id="chatroom" class="chat_room"></div>

    <div id="inputForm">
        <input type="text" id="message" />
        <input type="button" id="sendBtn" value="Отправить" />
    </div>
</div>*@


<div class="col-xs-12 col-md-9">

    <div class="chat__body">

        <div class="row">
            <div class="col-xs-12 ">
                <ul class="list-group chat__main"></ul>
            </div>

            <div class="chat__typing">
                <span id="typerDisplay"></span>
            </div>
        </div>


        <div class="down"></div>
    </div>

    <div class="chat__type__body">
        <div class="chat__type">
            <textarea id="message" placeholder="Type your message"></textarea>
            <button class="btn btn-primary" id="sendBtn">Send</button>
        </div>
    </div>

</div>


<script src="~/lib/signalr/signalr.min.js"></script>

<script>

    $(document).ready(function ()
    {

            var recivedId = '@ViewBag.RecivedId';

            $.ajax({
            type: "GET",
            url: "GetAllConversationWithContact?contact=" + recivedId,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {

                let chat_data = data.data;
                loadChat(chat_data);

            },
            failure: function (errMsg) {
                alert(errMsg);
            }
        });
    });


    function loadChat(chat_data) {
        chat_data.forEach(function (data) {
            displayMessage(data);
        });

        $('.chat__body').show();
        $('.__no__chat__').hide();

        $('.chat__body').animate({
            scrollTop: $(".down").offset().top
        }, 1);
    }

    let newMessageTpl =
        `<div>
                <div id="msg-{{id}}" class="row __chat__par__">
                    <div class="__chat__">
                    <p>{{body}}</p>
                    <p class="delivery-status">Delivered</p>
                    </div>
                </div>
                </div>`;


    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/chat")
        .configureLogging(signalR.LogLevel.Information)
        .build();

    let userName = '@User.Identity.Name';

    // получение сообщения от сервера
    hubConnection.on('Send', function (message, userName) {

        SendMessageToServer();

    });

    function SendMessageToServer() {

        var contactId = '@ViewBag.RecivedId';
        var url = "/Chat/SendMessage";
        $.post(url, {
            message: $('#message').val(),
            contact: contactId,
        }).done(function (data) {
            displayMessage(data);
            $('#message').val('');
        });

    }

    function displayMessage(message_obj) {

        var currentUserId = '@ViewBag.СurrentUserId';

        const msg_id = message_obj.conversationId;
        const msg_body = message_obj.message;

        let template = $(newMessageTpl).html();
        template = template.replace("{{id}}", msg_id);
        template = template.replace("{{body}}", msg_body);
        template = $(template);

        if (message_obj.senderId == currentUserId) {
            template.find('.__chat__').addClass('receive__chat');
        }
        else {
            template.find('.__chat__').addClass('from__chat');
        }

        if (message_obj.status == 1) {
            template.find('.delivery-status').show();
        }

        $('.chat__main').append(template);

    };

    // отправка сообщения на сервер
    document.getElementById("sendBtn").addEventListener("click", function (e) {
        let message = document.getElementById("message").value;
        hubConnection.invoke('Send', message, userName);
    });

    hubConnection.start();

</script>


@*<script type="text/javascript">
            //////////// Variable Instantiation
                $(document).ready(function () {

                    var recivedId = '@ViewBag.RecivedId';

                    $.ajax({
                        type: "GET",
                        url: "GetAllConversationWithContact?contact=" + recivedId,

                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {

                    let chat_data = resp.data || [];
                    loadChat(chat_data);

                },
                failure: function (errMsg) {
                    alert(errMsg);
                }
            });
                });

            let currentContact = null; // Holds contact currently being chatted with
            let socketId = null;
            let currentconversationChannel = null;
            let conversationChannelName = null;
            let newMessageTpl =
            `<div>
                <div id="msg-{{id}}" class="row __chat__par__">
                    <div class="__chat__">
                    <p>{{body}}</p>
                    <p class="delivery-status">Delivered</p>
                    </div>
                </div>
                </div>`;
        /////////////////////////////////

            @*function displayMessage( message_obj ) {
                const msg_id = message_obj.id;
                const msg_body = message_obj.message;
                let template = $(newMessageTpl).html();
                template = template.replace("{{id}}", msg_id);
                template = template.replace("{{body}}", msg_body);
                template = $(template);
                if ( message_obj.sender_id == @ViewBag.СurrentUserId ) {
                    template.find('.__chat__').addClass('from__chat');
                } else {
                    template.find('.__chat__').addClass('receive__chat');
                }
                if ( message_obj.status == 1 ) {
                    template.find('.delivery-status').show();
                }
                $('.chat__main').append(template);
        }






            //load chat data into view
            function loadChat( chat_data ) {
                chat_data.forEach( function(data) {
                    displayMessage(data);
                });

                $('.chat__body').show();
                $('.__no__chat__').hide();
            }
            @*// select contact to chat with
            $('.user__item').click( function(e) {
                e.preventDefault();
                currentContact = {
                    id: $(this).data('contact-id'),
                    name: $(this).data('contact-name'),
                };
                if ( conversationChannelName ) {
                    pusher.unsubscribe( conversationChannelName );
                }
                conversationChannelName = getConvoChannel( (@ViewBag.СurrentUserId * 1) ,  (currentContact.id * 1) );
                currentconversationChannel = pusher.subscribe(conversationChannelName);
                bind_client_events();

                $('#contacts').find('li').removeClass('active');
                $('#contacts .contact-' + currentContact.id).find('li').addClass('active');
                getChat(currentContact.id);
                });

            function getConvoChannel(user_id, contact_id) {
                if ( user_id > contact_id ) {
                    return 'private-chat-' + contact_id + '-' + user_id;
                }
                return 'private-chat-' + user_id + '-' + contact_id;
            }
            //User is typing
            var isTypingCallback = throttle(function() {
                currentconversationChannel.trigger("client-is-typing", {
                    user_id: @ViewBag.СurrentUserId,
                    contact_id: currentContact.id,
                });
            }, 1000);
            $('#msg_box').on('keyup',isTypingCallback);
            ///////////////////Sending Messages/////////////////////
            $('#sendMessage').click( function() {
                $.post("/SendMessage", {
                    message: $('#msg_box').val(),
                    contact: currentContact.id,
                    socket_id: socketId,
                }).done( function (data) {
                    displayMessage(data);
                    $('#msg_box').val('');
                });
                });

            function bind_client_events(){
                currentconversationChannel.bind("client-is-typing", function(data) {
                    if ( data.user_id == currentContact.id && data.contact_id == @ViewBag.СurrentUserId ) {
                        $('#typerDisplay').text( currentContact.name + ' is typing...');

                        $('.chat__typing').fadeIn(100, function() {
                            $('.chat__type__body').addClass('typing_display__open');
                        }).delay(1000).fadeOut(300, function(){
                            $('.chat__type__body').removeClass('typing_display__open');
                        });
                    }
                });
                currentconversationChannel.bind("new_message", function(msg) {
                        if ( msg.receiver_id == @ViewBag.СurrentUserId ) {
                        displayMessage(msg);
                        }
                        $.post("/message_delivered/" + msg.id, {
                        socket_id: socketId,
                        });
                });
                currentconversationChannel.bind("message_delivered", function(msg) {
                    $('#msg-' + msg.id).find('.delivery-status').show();
                });
            }
    </script>*@